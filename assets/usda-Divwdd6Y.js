async function U(g){const p=localStorage.getItem("usda_api_key");if(!p)throw new Error("USDA API key not set. Please set it in settings (usda_api_key in localStorage).");const S=`https://api.nal.usda.gov/fdc/v1/foods/search?api_key=${encodeURIComponent(p)}`,f=await fetch(S,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({generalSearchInput:g,pageSize:3})});if(!f.ok){const c=await f.text();throw new Error(`USDA search failed: ${f.status} ${c}`)}const h=(await f.json())?.foods||[];if(!h.length)return`No USDA data found for "${g}".`;const u=h[0],t={};for(const c of u.foodNutrients||[]){const m=(c.nutrientName||c.nutrient?.name||"").toString().toLowerCase(),b=Number(c.value??c.amount??0);m&&(t[m]=b)}const d=t.energy||t["energy (kcal)"]||t.calories||t["energy (kcal)"]||0,s=t.protein||0,y=t["total lipid (fat)"]||t["total fat"]||0,i=t["fatty acids, total saturated"]||t["saturated fat"]||0,$=t["carbohydrate, by difference"]||t.carbohydrates||0,a=t["sugars, total including nleA"]||t.sugars||t.sugar||0,r=t["fiber, total dietary"]||t["dietary fiber"]||0,n=t["sodium, na"]||t.sodium||0;let l="neutral";const e=[];a&&a>15||i&&i>5||n&&n>600?(l="avoid",a&&a>15&&e.push(`High sugar (${a} g)`),i&&i>5&&e.push(`High saturated fat (${i} g)`),n&&n>600&&e.push(`High sodium (${n} mg)`)):s&&s>=5&&r&&r>=3&&(a===0||a<=5)||s&&s>=8?(l="beneficial",s&&e.push(`Protein ${s} g`),r&&e.push(`Fiber ${r} g`),a!==void 0&&e.push(`Sugar ${a} g`)):(l="neutral",d&&e.push(`Calories ${d}`));const o=[];return d&&o.push(`Calories: ${d}`),s&&o.push(`Protein: ${s} g`),y&&o.push(`Fat: ${y} g`),i&&o.push(`Sat fat: ${i} g`),$&&o.push(`Carbs: ${$} g`),a&&o.push(`Sugar: ${a} g`),r&&o.push(`Fiber: ${r} g`),n&&o.push(`Sodium: ${n} mg`),`USDA match: ${u.description||u.foodName||u.dataType||"food"}
Classification: ${l.toUpperCase()}
Reasons: ${e.join("; ")||"None"}
Summary: ${o.join(", ")}`}export{U as classifyWithUSDA};
